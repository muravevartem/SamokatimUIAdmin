name: CI/CD

on:
  push:
    branches: ["master", "develop", "ci-cd"]
  pull_request:
    branches: ["master", "develop", "ci-cd"]

env:
  PROJECT_NAME: samokatim-client-ui
  EXTERNAL_PORT: 80
  APP_PORT: 80
  NODE_NO_WARNINGS: 1

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - run: npm ci
      - run: CI=false npm run build --if-present
      - name: Docker Hub login
        run: docker login --username ${{ secrets.USERNAME_HUB }} --password ${{ secrets.PASSWORD_HUB }}
      - name: Docker build
        run: docker build --tag ${{ secrets.USERNAME_HUB }}/$PROJECT_NAME:latest .
      - name: Docker push
        run: docker push ${{ secrets.USERNAME_HUB }}/$PROJECT_NAME:latest

  deploy:

    needs: [build]

    runs-on: ubuntu_latest

    steps:
      - uses: actions/checkout@v3
      - name: Create SSH key file
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          eval ${ssh-agent}
          ssh-add ~/.ssh/id_rsa
      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no -A ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }} 'sudo docker stop $PROJECT_NAME; sudo docker rm $PROJECT_NAME; sudo docker rmi ${{ secrets.USERNAME_HUB }}/$PROJECT_NAME; sudo docker run -d -p $EXTERNAL_PORT:$APP_PORT --name $PROJECT_NAME ${{ secrets.USERNAME_HUB }}/$PROJECT_NAME:latest;'



